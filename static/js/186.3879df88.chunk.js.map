{"version":3,"file":"static/js/186.3879df88.chunk.js","mappings":"sSAKMA,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,cAAc,UAAD,OANf,0NAUWC,EAAmB,mCAAG,sGACVP,EAAcQ,IAAI,uBADR,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAc,SAAAC,GACzB,OAAOX,EAAcQ,IAAI,gBAAiB,CACxCL,OAAQ,CACNQ,MAAAA,EACAC,cAAe,QACfC,KAAM,IAGX,EAEYC,EAAoB,SAAAC,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,GACpC,EAEYC,EAAoB,SAAAD,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,EAA5B,YACR,EAEYE,EAAoB,SAAAF,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,EAA5B,YACR,C,iHCMD,UAvCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,SACRS,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAU,mCAAG,oGAEfH,GAAa,GAFE,UAGIL,EAAAA,EAAAA,IAAkBF,GAHtB,OAGTN,EAHS,OAIfW,EAAWX,EAAKA,KAAKiB,SAJN,gDAMfC,QAAQC,IAAI,KAAMC,SANH,yBAQfP,GAAa,GARE,4EAAH,qDAWhBG,GAZoB,CAarB,GAAE,CAACV,IAEJ,OACE,wBACGM,GACC,SAAC,IAAD,IACqB,IAAnBF,EAAQW,QACV,wBANW,6CAQXX,EAAQY,KAAI,SAAAC,GACV,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAIR,C","sources":["components/API/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwN2E5OThkNzEwNGE4YzU1MTE2YTNhMGZlNmI1ZTcwMyIsInN1YiI6IjY1MjNjM2I3MDcyMTY2NDViNmQ5YTBmNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qnPTaEWYBN4zcIKafg-n-3TDQZFlldCqyLGijAdOKLg';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { language: 'en-US' },\n  headers: {\n    Authorization: `Bearer ${apiKey}`,\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axiosInstance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovie = query => {\n  return axiosInstance.get('/search/movie', {\n    params: {\n      query,\n      include_adult: 'false',\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axiosInstance.get(`/movie/${movieId}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/credits`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/reviews`);\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'components/API/api';\nimport { Loader } from 'components/Loader/loader';\n// import css from './Reviews.module.css';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const getReviews = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data.data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  const noReview = \"We don't have any reviews for this movie\";\n  return (\n    <ul>\n      {isLoading ? (\n        <Loader />\n      ) : reviews.length === 0 ? (\n        <li>{noReview}</li>\n      ) : (\n        reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["axiosInstance","axios","baseURL","params","language","headers","Authorization","fetchTrendingMovies","get","data","searchMovie","query","include_adult","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useState","reviews","setReviews","isLoading","setIsLoading","useParams","useEffect","getReviews","results","console","log","message","length","map","review","author","content","id"],"sourceRoot":""}