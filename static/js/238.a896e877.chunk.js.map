{"version":3,"file":"static/js/238.a896e877.chunk.js","mappings":"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","sources":["components/API/api.js","webpack://react-homework-template/./src/components/Details/Details.module.css?cd8c","components/Details/Details.jsx","pages/moviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwN2E5OThkNzEwNGE4YzU1MTE2YTNhMGZlNmI1ZTcwMyIsInN1YiI6IjY1MjNjM2I3MDcyMTY2NDViNmQ5YTBmNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qnPTaEWYBN4zcIKafg-n-3TDQZFlldCqyLGijAdOKLg';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { language: 'en-US' },\n  headers: {\n    Authorization: `Bearer ${apiKey}`,\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axiosInstance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovie = query => {\n  return axiosInstance.get('/search/movie', {\n    params: {\n      query,\n      include_adult: 'false',\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axiosInstance.get(`/movie/${movieId}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/credits`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/reviews`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardWraper\":\"Details_cardWraper__fTSsJ\",\"description\":\"Details_description__57LB4\",\"posterImage\":\"Details_posterImage__VDh0M\"};","import css from './Details.module.css';\n\nconst DetailsCard = ({ poster, title, release, score, overview, genres }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const userScore = Math.ceil(score * 10);\n\n  let releaseYear = '';\n  let genresString = '';\n\n  if (release) {\n    releaseYear = release.substring(0, 4);\n  }\n  if (genres) {\n    genresString = genres.map(genre => genre.name).join('  ');\n  }\n\n  return (\n    <div className={css.cardWraper}>\n      <div>\n        <img\n          src={\n            poster ? `https://image.tmdb.org/t/p/w500/${poster}` : defaultImg\n          }\n          className={css.posterImage}\n          alt={title}\n          width=\"320px\"\n          height=\"480px\"\n        />\n      </div>\n      <div className={css.description}>\n        <section>\n          <h2>\n            {title}({releaseYear})\n          </h2>\n          <p>User score {userScore}%</p>\n        </section>\n        <section>\n          <h3>Overview</h3>\n          <p className={css.overviewText}>{overview}</p>\n        </section>\n        <section>\n          <h3>Genres</h3>\n          <p>{genresString}</p>\n        </section>\n      </div>\n    </div>\n  );\n};\nexport default DetailsCard;\n","import { useEffect, useState, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/API/api';\nimport DetailsCard from 'components/Details/Details';\nimport Loader from 'components/Loader/loader';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n\n        const responce = await fetchMovieDetails(movieId);\n        setDetails(responce.data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDetails();\n  }, [movieId]);\n  return (\n    <>\n      <Link to={backLinkHref.current}>Go back</Link>\n      {isLoading && <Loader />}\n      {details !== 0 && (\n        <DetailsCard\n          poster={details.poster_path}\n          title={details.title}\n          release={details.release_date}\n          score={details.vote_average}\n          overview={details.overview}\n          genres={details.genres}\n        />\n      )}\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axiosInstance","axios","baseURL","params","language","headers","Authorization","fetchTrendingMovies","get","data","searchMovie","query","include_adult","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","poster","title","release","score","overview","genres","userScore","Math","ceil","releaseYear","genresString","substring","map","genre","name","join","className","css","src","alt","width","height","location","useLocation","useState","details","setDetails","isLoading","setIsLoading","useParams","backLinkHref","useRef","state","from","useEffect","fetchDetails","responce","console","log","message","to","current","Details","poster_path","release_date","vote_average","Suspense","fallback"],"sourceRoot":""}