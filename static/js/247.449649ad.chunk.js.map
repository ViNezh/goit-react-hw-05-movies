{"version":3,"file":"static/js/247.449649ad.chunk.js","mappings":"sSAKMA,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,+BACTC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,cAAc,UAAD,OANf,0NAUWC,EAAmB,mCAAG,sGACVP,EAAcQ,IAAI,uBADR,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAc,SAAAC,GACzB,OAAOX,EAAcQ,IAAI,gBAAiB,CACxCL,OAAQ,CACNQ,MAAAA,EACAC,cAAe,QACfC,KAAM,IAGX,EAEYC,EAAoB,SAAAC,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,GACpC,EAEYC,EAAoB,SAAAD,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,EAA5B,YACR,EAEYE,EAAoB,SAAAF,GAC/B,OAAOf,EAAcQ,IAAd,iBAA4BO,EAA5B,YACR,C,iHCiBD,UAjDa,WACX,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,SACRS,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAQ,mCAAG,oGAEbH,GAAa,GAFA,UAGMN,EAAAA,EAAAA,IAAkBD,GAHxB,OAGPN,EAHO,OAIbW,EAASX,EAAKA,KAAKiB,MAJN,gDAMbC,QAAQC,IAAI,KAAMC,SANL,yBAQbP,GAAa,GARA,4EAAH,qDAWdG,GAZoB,CAarB,GAAE,CAACV,IAIJ,OACE,wBACGM,GACC,SAAC,IAAD,IAEAF,EAAMW,KAAI,SAAAJ,GACR,OACE,2BACE,gBACEK,IACEL,EAAKM,aAAL,0CACuCN,EAAKM,cAbzC,oDAgBLC,IAAKP,EAAKQ,KACVC,MAAM,QACNC,OAAO,WAET,yBAAG,IAAEV,EAAKQ,KAAK,QACf,yBAAG,eAAaR,EAAKW,UAAU,SAZxBX,EAAKY,GAejB,KAIR,C","sources":["components/API/api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwN2E5OThkNzEwNGE4YzU1MTE2YTNhMGZlNmI1ZTcwMyIsInN1YiI6IjY1MjNjM2I3MDcyMTY2NDViNmQ5YTBmNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qnPTaEWYBN4zcIKafg-n-3TDQZFlldCqyLGijAdOKLg';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { language: 'en-US' },\n  headers: {\n    Authorization: `Bearer ${apiKey}`,\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axiosInstance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovie = query => {\n  return axiosInstance.get('/search/movie', {\n    params: {\n      query,\n      include_adult: 'false',\n      page: 1,\n    },\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axiosInstance.get(`/movie/${movieId}`);\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/credits`);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axiosInstance.get(`/movie/${movieId}/reviews`);\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'components/API/api';\nimport { Loader } from 'components/Loader/loader';\n// import css from './Cast.module.css';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) return;\n    const getCasts = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieCredits(movieId);\n        setCasts(data.data.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCasts();\n  }, [movieId]);\n\n  const defaultImg = 'http://dummyimage.com/80.jpg/99cccc&text=No+foto!';\n\n  return (\n    <ul>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        casts.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                    : defaultImg\n                }\n                alt={cast.name}\n                width=\"120px\"\n                height=\"160px\"\n              />\n              <p> {cast.name} </p>\n              <p> Character: {cast.character} </p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["axiosInstance","axios","baseURL","params","language","headers","Authorization","fetchTrendingMovies","get","data","searchMovie","query","include_adult","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useState","casts","setCasts","isLoading","setIsLoading","useParams","useEffect","getCasts","cast","console","log","message","map","src","profile_path","alt","name","width","height","character","id"],"sourceRoot":""}